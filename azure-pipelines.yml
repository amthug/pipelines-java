trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- script: |
    echo Starting the build
    mvn package
  displayName: 'Build with Maven'
- task: Maven@2
  displayName: 'Maven pom.xml'
  inputs:
    mavenPomFile: '$(mavenPOMFile)'
# Copy files    
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/azure-functions/**'
    TargetFolder: '$(build.artifactstagingdirectory)'
# Create Archive : zip file
- task: ArchiveFiles@2
  displayName: 'Archive $(build.artifactstagingdirectory)/target/azure-functions/$(functionAppMvnTargetFolder)'
  inputs:
    rootFolderOrFile: '$(build.artifactstagingdirectory)/target/azure-functions/$(functionAppMvnTargetFolder)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
# Deploy using Azure App Service Deploy - Webdeployment
- task: AzureRmWebAppDeployment@4
  displayName: 'Azure App Service Deploy: javapipeline'
  inputs:
    azureSubscription: '$(azureSubcriptionKey)'
    appType: functionApp
    WebAppName: hca-notification-function
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    enableCustomDeployment: true
    DeploymentType: runFromZip    
    TakeAppOfflineFlag: false
    ExcludeFilesFromAppDataFlag: false
    RenameFilesFlag: false
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'